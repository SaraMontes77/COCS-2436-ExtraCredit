class Solution {
public:
   vector<string> generateParenthesis(int n) {
        vector<string> result;
        rec("", 0, 0, n, result);
        return result;
    }

private:
    void rec(string current, int open, int close, int n, vector<string>& result) {
        if (current.length() == 2 * n) {
            result.push_back(current);
            return;
        }
           if (open < n) {
            rec(current + "(", open + 1, close, n, result);
        }

        if (close < open) {
            rec(current + ")", open, close + 1, n, result);
        }
    }

};
